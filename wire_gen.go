// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"aaa/package_a/schema"
	"aaa/package_a/service/impl"
	schema2 "aaa/package_b/schema"
	impl2 "aaa/package_b/service/impl"
)

// Injectors from wire.go:

func InitializeApplication() (*application, error) {
	packageAMiddle := impl.NewA()
	packageBMiddle := impl2.NewB()
	packageA := impl.UpdateA(packageAMiddle, packageBMiddle)
	aSchema := schema.NewSchema(packageA)
	packageB := impl2.UpdateB(packageBMiddle, packageAMiddle)
	bSchema := schema2.NewSchema(packageB)
	mainApplication := &application{
		A: aSchema,
		B: bSchema,
	}
	return mainApplication, nil
}

// wire.go:

type application struct {
	A *schema.ASchema
	B *schema2.BSchema
}
